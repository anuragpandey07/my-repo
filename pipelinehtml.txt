pipeline {
    agent any
    
    environment {
        DOCKER_IMAGE = 'my-docker-image:latest'
    }

    triggers {
        // Trigger the pipeline when changes are pushed to the 'main' branch
        pollSCM('* * * * *')  // Check for changes every minute; adjust as needed
    }

    stages {
        stage('Checkout') {
            steps {
                // Checkout the code from the repository
                checkout scm
            }
        }

        stage('Build Docker Image') {
            when {
                branch 'main'
            }
            steps {
                script {
                    // Build the Docker image
                    docker.build("${DOCKER_IMAGE}")
                }
            }
        }

        stage('Provision Docker') {
            when {
                branch 'main'
            }
            steps {
                script {
                    // Run Docker container
                    docker.image("${DOCKER_IMAGE}").run('-d -p 8080:80')
                }
            }
        }

        stage('Post-Build Actions') {
            steps {
                // Optionally, you can add steps to notify, archive artifacts, etc.
                echo 'Pipeline completed.'
            }
        }
    }
    
    post {
        always {
            // Clean up actions or notifications
            echo 'Cleaning up...'
        }
    }
}